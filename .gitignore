#################################################################
#                            Python                             #
#################################################################
# Byte-compiled / optimized / DLL files
python/__pycache__/
python/*.py[cod]
python/*$py.class

# C extensions
python/*.so

# Distribution / packaging
python/.Python
python/build/
python/develop-eggs/
python/dist/
python/downloads/
python/eggs/
python/.eggs/
python/lib/
python/lib64/
python/parts/
python/sdist/
python/var/
python/wheels/
python/share/python-wheels/
python/*.egg-info/
python/.installed.cfg
python/*.egg
python/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
python/*.manifest
python/*.spec

# Installer logs
python/pip-log.txt
python/pip-delete-this-directory.txt

# Unit test / coverage reports
python/htmlcov/
python/.tox/
python/.nox/
python/.coverage
python/.coverage.*
python/.cache
python/nosetests.xml
python/coverage.xml
python/*.cover
python/*.py,cover
python/.hypothesis/
python/.pytest_cache/
python/cover/

# Translations
python/*.mo
python/*.pot

# Django stuff:
python/*.log
python/local_settings.py
python/db.sqlite3
python/db.sqlite3-journal

# Flask stuff:
python/instance/
python/.webassets-cache

# Scrapy stuff:
python/.scrapy

# Sphinx documentation
python/docs/_build/

# PyBuilder
python/.pybuilder/
python/target/

# Jupyter Notebook
python/.ipynb_checkpoints

# IPython
python/profile_default/
python/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
python/__pypackages__/

# Celery stuff
python/celerybeat-schedule
python/celerybeat.pid

# SageMath parsed files
python/*.sage.py

# Environments
python/.env
python/.venv
python/env/
python/venv/
python/ENV/
python/env.bak/
python/venv.bak/

# Spyder project settings
python/.spyderproject
python/.spyproject

# Rope project settings
python/.ropeproject

# mkdocs documentation
python//site

# mypy
python/.mypy_cache/
python/.dmypy.json
python/dmypy.json

# Pyre type checker
python/.pyre/

# pytype static type analyzer
python/.pytype/

# Cython debug symbols
python/cython_debug/

#################################################################
#                            Golang                             #
#################################################################
# Binaries for programs and plugins
golang/*.exe
golang/*.exe~
golang/*.dll
golang/*.so
golang/*.dylib

# Test binary, built with `go test -c`
golang/*.test

# Output of the go coverage tool, specifically when used with LiteIDE
golang/*.out

# Dependency directories (remove the comment below to include it)
golang/vendor/

#################################################################
#                             Node                              #
#################################################################
# Logs
node/logs
node/*.log
node/npm-debug.log*
node/yarn-debug.log*
node/yarn-error.log*
node/lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
node/report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
node/pids
node/*.pid
node/*.seed
node/*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
node/lib-cov

# Coverage directory used by tools like istanbul
node/coverage
node/*.lcov

# nyc test coverage
node/.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
node/.grunt

# Bower dependency directory (https://bower.io/)
node/bower_components

# node-waf configuration
node/.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
node/build/Release

# Dependency directories
node/node_modules/
node/jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
node/web_modules/

# TypeScript cache
node/*.tsbuildinfo

# Optional npm cache directory
node/.npm

# Optional eslint cache
node/.eslintcache

# Microbundle cache
node/.rpt2_cache/
node/.rts2_cache_cjs/
node/.rts2_cache_es/
node/.rts2_cache_umd/

# Optional REPL history
node/.node_repl_history

# Output of 'npm pack'
node/*.tgz

# Yarn Integrity file
node/.yarn-integrity

# dotenv environment variables file
node/.env
node/.env.test

# parcel-bundler cache (https://parceljs.org/)
node/.cache
node/.parcel-cache

# Next.js build output
node/.next
node/out

# Nuxt.js build / generate output
node/.nuxt
node/dist

# Gatsby files
node/.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
node/.vuepress/dist

# Serverless directories
node/.serverless/

# FuseBox cache
node/.fusebox/

# DynamoDB Local files
node/.dynamodb/

# TernJS port file
node/.tern-port

# Stores VSCode versions used for testing VSCode extensions
node/.vscode-test

# yarn v2
node/.yarn/cache
node/.yarn/unplugged
node/.yarn/build-state.yml
node/.yarn/install-state.gz
node/.pnp.*